#!/bin/bash

function printHelp {
  echo "Usage: `basename $0` </path/to/input_fasta> </path/to/output_fasta> <reference_sequence_header> [--clustal-omega=/path/to/clustalomega]"
  echo -e "\nOptional parameters:"
  echo -e "\t-l, --clustal-omega: run ClustalOmega using the provided path instead of using the the pegi3s/docker image (default)."
}

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  printHelp
  exit 0
fi

if [ $# -lt 3 ]; then
  printHelp
  exit 0
fi

input_fasta=$1
file=$(basename -- "$input_fasta")
output=$2
reference=$3

DOCKER=true
CLUSTALOMEGA=clustalo

for key in "$@"
do
case $key in
    -co=*|--clustal-omega=*)
        CLUSTALOMEGA="${key#*=}"
        DOCKER=false
        shift # past argument=value
        ;;
    *)
          # unknown option
    ;;
esac
done

if [ "$DOCKER" = false ]; then
    $CLUSTALOMEGA --version > /dev/null 2>&1
    if [ $? -gt 0 ]; then
        exit 1;
    fi
fi

if [ ! -f "$input_fasta" ]; then
    echo "Input FASTA file "$input_fasta" does not exist."
    exit 1;
fi

results_folder=$(mktemp -d /tmp/check_CDS.XXXXXXXXXX) || { echo "Failed to create a temporary directory."; exit 1; }

cp $input_fasta $results_folder/input

fasta_remove_line_breaks $results_folder/input

cd $results_folder

echo "Analyzing input FASTA file: $input_fasta"
echo "Temporary working directory: $results_folder"

grep -A1 -w $reference $results_folder/input >> temp.$file
sed -i -e "/\b$reference\b/,+1d" $results_folder/input

while read header; read sequences 
do

echo $header >> temp.$file
echo $sequences >> temp.$file

seqcount=$(grep -c '>' temp.$file)

if [ $seqcount -gt "1" ]; then
    if [ "$DOCKER" = true ]; then
        docker run --rm -v $(pwd):/data pegi3s/clustalomega --force -i /data/temp.$file -o /data/tempaliraw.$file
    else
        ${CLUSTALOMEGA} --force -i $(pwd)/temp.$file -o $(pwd)/tempaliraw.$file
    fi
	grep -v '>' tempaliraw.$file > tempali.$file
	sed -i 's/---//g' tempali.$file
	a=$(grep -c "^\-[^-]" tempali.$file)
	b=$(grep -c "[^-]-[^-]" tempali.$file)
	c=$(grep -c '[^-]\-$' tempali.$file)
	d=$(grep -c "^\-\-[^-]" tempali.$file)
	e=$(grep -c "[^-]--[^-]" tempali.$file)
	f=$(grep -c '[^-]\-\-$' tempali.$file)
	if [ $a -gt "0" ] || [ $b -gt "0" ] || [ $c -gt "0" ] || [ $d -gt "0" ] || [ $e -gt "0" ] || [ $f -gt "0" ]; then
		head -n -2 temp.$file > temp1.$file
		rm temp.$file && mv temp1.$file temp.$file
	fi

fi

done < $results_folder/input

cp temp.$file $output
